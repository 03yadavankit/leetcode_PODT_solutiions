
class Solution {
public:
    long long minCost(vector<int>& nums, vector<int>& cost) {
        long long ans=LLONG_MAX;
        vector<long long> pre;
        vector<pair<long, long>> p;
        
        for(int i=0; i<cost.size(); i++){
            p.push_back({nums[i], cost[i]});
        }
        
        sort(p.begin(), p.end());
        
        pre.push_back(0);
        for(int i=0; i<p.size(); i++){
            pre.push_back(pre[i]+p[i].second);
        }
        
        long long lft=0, rht=0;
        for(int i=0; i<nums.size(); i++){
           
            if(i==0){
                lft=0;
                for(int j=1; j<cost.size(); j++){
                    rht+=(long long)(p[j].first-p[0].first)*(long long)p[j].second;
                }
                if(ans>rht+lft){
                    ans=lft+rht;
                }
                continue;
            }
            long long elvtn=p[i].first-p[i-1].first;
    
            rht-=elvtn*(long long)(p[i].second);
            rht-=elvtn*(pre[pre.size()-1]-pre[i+1]);
            
        
            lft+=elvtn*(pre[i]-pre[0]);
            
          
            if(ans>rht+lft){
                    ans=lft+rht;
            }
        }
        
        return ans;
    }
};
